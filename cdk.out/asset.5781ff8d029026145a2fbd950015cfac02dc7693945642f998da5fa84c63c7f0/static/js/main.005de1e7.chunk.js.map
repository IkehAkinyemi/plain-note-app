{"version":3,"sources":["components/NoteCard.tsx","pages/Notes.tsx","pages/Create.tsx","components/Layout.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","avatar","background","note","category","yellow","green","red","blue","NoteCard","handleDelete","classes","Card","elevation","CardHeader","Avatar","className","toUpperCase","action","IconButton","onClick","id","title","subheader","CardContent","Typography","variant","color","details","Notes","initialState","notes","localStorage","getItem","JSON","parse","useState","setNotes","useEffect","a","newNotes","filter","console","log","setItem","stringify","Container","breakpointCols","default","1100","700","columnClassName","map","field","margingTop","marginBottom","display","Create","history","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","getAllNotes","newNote","uuid","push","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","theme","page","width","padding","spacing","drawer","drawerPaper","root","active","textAlign","appbar","toolbar","mixins","appname","flexGrow","marginLeft","Layout","children","handleChange","darkMode","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlined","AppBar","Toolbar","Switch","checked","Drawer","anchor","paper","List","item","ListItem","button","ListItemIcon","ListItemText","primary","App","dark","setDarkMode","createMuiTheme","palette","main","secondary","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","ThemeProvider","Paper","style","height","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.005de1e7.chunk.js","sourcesContent":["import Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\nimport { Avatar, makeStyles, Typography } from \"@material-ui/core\";\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    background: (note: any) => {\n      if (note.category === \"work\") {\n        return yellow[700];\n      }\n      if (note.category === \"reminders\") {\n        return green[500];\n      }\n      if (note.category === \"todos\") {\n        return red[500];\n      }\n      return blue[500];\n    },\n  },\n});\n\ntype INoteCard = {\n  note: any;\n  handleDelete: (id: any) => {};\n};\n\nconst NoteCard = ({ note, handleDelete }: INoteCard) => {\n  const classes = useStyles(note);\n\n  return (\n    <div>\n      {note ? (\n        <Card elevation={4}>\n          <CardHeader\n            avatar={\n              <Avatar className={classes.avatar}>\n                {note.category[0].toUpperCase()}\n              </Avatar>\n            }\n            action={\n              <IconButton onClick={() => handleDelete(note.id)}>\n                <DeleteOutlined />\n              </IconButton>\n            }\n            title={note.title}\n            subheader={note.category}\n          />\n\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {note.details}\n            </Typography>\n          </CardContent>\n        </Card>\n      ) : (\n        <Typography>No notes, add some!</Typography>\n      )}\n    </div>\n  );\n};\n\nexport default NoteCard;\n","import React, { useEffect, useState } from \"react\";\n\nimport Container from \"@material-ui/core/Container\";\nimport NoteCard from \"../components/NoteCard\";\nimport Masonry from \"react-masonry-css\";\n\nexport default function Notes() {\n  const initialState = {\n    notes: localStorage.getItem(\"notes\")\n      ? JSON.parse(localStorage.getItem(\"notes\") as any)\n      : [],\n  };\n  const [notes, setNotes] = useState(initialState.notes);\n  useEffect(() => {\n    setNotes(initialState.notes);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleDelete = async (id: any) => {\n    const newNotes = notes.filter((note: any) => note.id !== id);\n    console.log(newNotes);\n    setNotes(newNotes);\n    localStorage.setItem(\"notes\", JSON.stringify(newNotes));\n  };\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  };\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {notes.map((note: Note) => (\n          <div key={note.id}>\n            <NoteCard note={note} handleDelete={handleDelete} />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { uuid } from \"uuidv4\";\n\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { FormControlLabel, makeStyles } from \"@material-ui/core\";\nimport {\n  Radio,\n  Typography,\n  Container,\n  TextField,\n  Button,\n  RadioGroup,\n  FormControl,\n  FormLabel,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles({\n  field: {\n    margingTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n  },\n});\n\nconst Create: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState(\"reminders\");\n\n  const handleSubmit = (e:any)=> {\n    e.preventDefault();\n\n    if (title && details) {\n      let getAllNotes = JSON.parse(localStorage.getItem(\"notes\") as any);\n\n      const newNote: Note = {\n        id: uuid(), \n        title: title, \n        details: details,\n        category: category,\n      };\n\n      localStorage.setItem(\"notes\", JSON.stringify([...getAllNotes, newNote]));\n      history.push(\"/\");\n    }\n\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n  };\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        gutterBottom\n        color=\"textSecondary\"\n      >\n        Create a New Note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e) => setTitle(e.target.value)}\n          className={classes.field}\n          label=\"Note title\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField\n          onChange={(e) => setDetails(e.target.value)}\n          className={classes.field}\n          label=\"Details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          multiline\n          rows={4}\n          error={detailsError}\n        />\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"ToDos\" />\n            <FormControlLabel\n              value=\"reminders\"\n              control={<Radio />}\n              label=\"Reminders\"\n            />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          // className={classes.btn}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          // startIcon={<SendIcon />}\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Submit\n        </Button>\n      </form>\n\n      <br />\n    </Container>\n  );\n};\nexport default Create;\n","import { makeStyles } from \"@material-ui/core\";\n\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  AppBar,\n  Toolbar,\n  Switch,\n} from \"@material-ui/core\";\nimport { AddCircleOutlined, SubjectOutlined } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nconst drawerWidth = 240;\n// List = ul\n// ListItem = li\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      width: \"100%\",\n      padding: theme.spacing(3),\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    root: {\n      display: \"flex\",\n    },\n    active: {\n      background: \"#515151\",\n    },\n    title: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n    },\n    appbar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    toolbar: theme.mixins.toolbar,\n    appname: {\n      flexGrow: 1,\n    },\n    avatar: {\n      marginLeft: theme.spacing(1),\n    },\n  };\n});\n\nconst Layout = ({\n  children,\n  handleChange,\n  darkMode,\n}: {\n  children: any;\n  darkMode: any;\n  handleChange: any;\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Notes\",\n      icon: <AddCircleOutlined color=\"secondary\" />,\n      path: \"/create\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n      <AppBar className={classes.appbar} elevation={0}>\n        <Toolbar>\n          <Typography className={classes.appname}>\n            Welcome back to <b>NOTES</b>{\" \"}\n            {/* {format(new Date(), 'do MMMM Y')} */}\n          </Typography>\n          <Switch checked={darkMode} onChange={handleChange} />\n          <Typography>Dark</Typography>\n        </Toolbar>\n      </AppBar>\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            NOTES APP\n          </Typography>\n        </div>\n\n        {/* list / links */}\n\n        <List>\n          {menuItems.map((item: any) => (\n            <ListItem\n              key={item.text}\n              button\n              onClick={() => history.push(item.path)}\n              // className={location.pathname == item.path ? classes.active : \"\"}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notes from \"./pages/Notes\";\nimport Create from \"./pages/Create\";\nimport { createMuiTheme, Paper, ThemeProvider } from \"@material-ui/core\";\n\nimport Layout from \"./components/Layout\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const initialState = {\n    notes: localStorage.getItem(\"notes\")\n      ? JSON.parse(localStorage.getItem(\"notes\") as any)\n      : [],\n    dark: localStorage.getItem(\"dark\")\n      ? JSON.parse(localStorage.getItem(\"dark\") as any)\n      : false,\n  };\n  const [darkMode, setDarkMode] = useState(initialState.dark);\n  const [notes, setNotes] = useState(initialState.notes);\n  console.log(notes);\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: darkMode ? \"#303030\" : \"#f7f7f7\",\n      },\n      type: darkMode ? \"dark\" : \"light\",\n      secondary: { main: \"#F4BB19\" },\n    },\n    typography: {\n      fontFamily: \"Quicksand\",\n      fontWeightLight: 400,\n      fontWeightRegular: 500,\n      fontWeightMedium: 600,\n      fontWeightBold: 700,\n    },\n  });\n\n  const setUpLocalStorage = () => {\n    localStorage.setItem(\"notes\", JSON.stringify(initialState.notes));\n    setNotes(initialState.notes);\n    localStorage.setItem(\"dark\", JSON.stringify(initialState.dark));\n    setDarkMode(initialState.dark);\n  };\n\n  const handleChange = () => {\n    setDarkMode(!darkMode);\n    localStorage.setItem(\"dark\", JSON.stringify(!darkMode));\n  };\n  useEffect(() => {\n    setUpLocalStorage();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper style={{ height: \"100vh\" }}>\n        <Router>\n          <Layout handleChange={() => handleChange()} darkMode={darkMode}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Notes />\n              </Route>\n              <Route path=\"/create\">\n                <Create />\n              </Route>\n            </Switch>\n          </Layout>\n        </Router>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}